name: Build, test and publish images

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize ]

jobs:

  docker:
    name: Build, test and publish
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !contains(github.event.commits[0].message, '[ci skip]')"
    strategy:
      matrix:
        version: [ '7.4', '8.0', '8.1' ]
        flavor: [ '', '-fpm', '-cli']
        include:
          - version: 'latest'
            flavor: ''
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image for testing
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=columbusinteractive/php:${{ matrix.version }}${{ matrix.flavor }}
          cache-to: type=inline
          context: .
          build-args: |
            BASE_IMAGE=${{ matrix.version }}${{ matrix.flavor }}
          tags: columbusinteractive/php:${{ matrix.version }}${{ matrix.flavor }}
          load: true

      - name: Build dev image for testing
        uses: docker/build-push-action@v2
        with:
          cache-to: type=inline
          context: ./dev
          build-args: |
            BASE_IMAGE=${{ matrix.version }}${{ matrix.flavor }}
          tags: columbusinteractive/php-dev:${{ matrix.version }}${{ matrix.flavor }}
          load: true

      - name: Build swoole image for testing
        uses: docker/build-push-action@v2
        with:
          cache-to: type=inline
          context: ./swoole
          build-args: |
            BASE_IMAGE=${{ matrix.version }}-cli
          tags: columbusinteractive/php-swoole:${{ matrix.version }}
          load: true

      - name: Test images
        env:
          VERSION: ${{ matrix.version }}${{ matrix.flavor }}
        run: |
          make test VERSION=${VERSION}
          make -C dev test VERSION=${VERSION}
          make -C swoole test VERSION=${VERSION}

      - name: Login to DockerHub
        if: "github.event_name != 'pull_request'"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image and push to registry
        if: "github.event_name != 'pull_request'"
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=columbusinteractive/php:${{ matrix.version }}${{ matrix.flavor }}
          cache-to: type=inline
          context: .
          build-args: |
            BASE_IMAGE=${{ matrix.version }}${{ matrix.flavor }}
          tags: columbusinteractive/php:${{ matrix.version }}${{ matrix.flavor }}
          push: true

      - name: Build dev image and push to registry
        if: "github.event_name != 'pull_request'"
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          cache-to: type=inline
          context: ./dev
          build-args: |
            BASE_IMAGE=${{ matrix.version }}${{ matrix.flavor }}
          tags: columbusinteractive/php-dev:${{ matrix.version }}${{ matrix.flavor }}
          push: true

      - name: Build swoole image and push to registry
        if: "github.event_name != 'pull_request'"
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          cache-to: type=inline
          context: ./swoole
          build-args: |
            BASE_IMAGE=${{ matrix.version }}-cli
          tags: columbusinteractive/php-swoole:${{ matrix.version }}
          push: true