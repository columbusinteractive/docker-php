name: Build, test and publish images

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize ]
  schedule:
    - cron: 0 0 * * 0

env:
  PLATFORMS: linux/amd64,linux/arm64

x-templates:
  steps-build-test-publish-image: &steps-build-test-publish-image
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build image
      uses: docker/build-push-action@v3
      with:
        context: ${{ env.BASE_DIR }}
        build-args: BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}
        pull: true
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        load: true

    - name: Test image
      run: make -C ${{ env.BASE_DIR }} test

    - name: Login to DockerHub
      if: "github.event_name != 'pull_request'"
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push image to registry
      if: "github.event_name != 'pull_request'"
      uses: docker/build-push-action@v3
      with:
        platforms: ${{ env.PLATFORMS }}
        context: ${{ env.BASE_DIR }}
        build-args: BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}
        pull: true
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        push: true

jobs:
  base-images:
    name: Build, test and publish base images
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !contains(github.event.commits[0].message, '[ci skip]')"
    strategy:
      matrix:
        version: [ '8.0', '8.1', '8.2' ]
        flavor: [ '', '-fpm' ]
    env:
      IMAGE_NAME: columbusinteractive/php
      IMAGE_TAG: ${{ matrix.version }}${{ matrix.flavor }}
      BASE_IMAGE_TAG: ${{ env.IMAGE_TAG }}
      BASE_DIR: .
    steps: *steps-build-test-publish-image

  dev-images:
    name: Build, test and publish dev images
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !contains(github.event.commits[0].message, '[ci skip]')"
    needs: base-images
    strategy:
      matrix:
        version: [ '8.0', '8.1', '8.2' ]
        flavor: [ '', '-fpm' ]
    env:
      IMAGE_NAME: columbusinteractive/php-dev
      IMAGE_TAG: ${{ matrix.version }}${{ matrix.flavor }}
      BASE_IMAGE_TAG: ${{ env.IMAGE_TAG }}
      BASE_DIR: ./dev
    steps: *steps-build-test-publish-image

  swoole-images:
    name: Build, test and publish swoole images
    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !contains(github.event.commits[0].message, '[ci skip]')"
    needs: base-images
    strategy:
      matrix:
        version: [ '8.0', '8.1', '8.2' ]
    env:
      IMAGE_NAME: columbusinteractive/php-swoole
      IMAGE_TAG: ${{ matrix.version }}
      BASE_IMAGE_TAG: ${{ env.IMAGE_TAG }}
      BASE_DIR: ./swoole
    steps: *steps-build-test-publish-image
